import React, { useState } from 'react'
import { motion } from 'framer-motion'
import { Trophy, Crown, Medal, TrendingUp, Heart, GitBranch, DollarSign, Zap } from 'lucide-react'

const Leaderboard = () => {
  const [activeTab, setActiveTab] = useState('creators')

  const tabs = [
    { id: 'creators', label: 'Top Creators', icon: Crown },
    { id: 'memes', label: 'Viral Memes', icon: TrendingUp },
    { id: 'remixes', label: 'Most Remixed', icon: GitBranch },
    { id: 'earnings', label: 'Top Earners', icon: DollarSign }
  ]

  const topCreators = [
    {
      rank: 1,
      name: 'MemeKing42',
      avatar: '👑',
      totalMemes: 247,
      totalLikes: 89420,
      totalRemixes: 1247,
      earnings: '$12,847',
      badge: 'Legendary'
    },
    {
      rank: 2,
      name: 'ViralVixen',
      avatar: '🔥',
      totalMemes: 189,
      totalLikes: 76230,
      totalRemixes: 892,
      earnings: '$9,234',
      badge: 'Epic'
    },
    {
      rank: 3,
      name: 'MemeWizard',
      avatar: '🧙‍♂️',
      totalMemes: 156,
      totalLikes: 65840,
      totalRemixes: 743,
      earnings: '$7,891',
      badge: 'Master'
    },
    {
      rank: 4,
      name: 'LaughFactory',
      avatar: '😂',
      totalMemes: 203,
      totalLikes: 54320,
      totalRemixes: 634,
      earnings: '$6,542',
      badge: 'Expert'
    },
    {
      rank: 5,
      name: 'MemeGenius',
      avatar: '🧠',
      totalMemes: 134,
      totalLikes: 48920,
      totalRemixes: 567,
      earnings: '$5,789',
      badge: 'Pro'
    }
  ]

  const viralMemes = [
    {
      rank: 1,
      title: 'Crypto Winter Survival Guide',
      creator: 'MemeKing42',
      likes: 15420,
      remixes: 234,
      views: 89420,
      image: '🥶'
    },
    {
      rank: 2,
      title: 'AI Taking My Job',
      creator: 'TechMemer',
      likes: 12350,
      remixes: 189,
      views: 76230,
      image: '🤖'
    },
    {
      rank: 3,
      title: 'Web3 Explained Simply',
      creator: 'BlockchainBro',
      likes: 11240,
      remixes: 156,
      views: 65840,
      image: '🌐'
    }
  ]

  const getRankIcon = (rank: number) => {
    switch (rank) {
      case 1:
        return <Crown className="w-6 h-6 text-yellow-400" />
      case 2:
        return <Medal className="w-6 h-6 text-gray-400" />
      case 3:
        return <Medal className="w-6 h-6 text-amber-600" />
      default:
        return <span className="w-6 h-6 flex items-center justify-center text-gray-400 font-bold">#{rank}</span>
    }
  }

  const getBadgeColor = (badge: string) => {
    switch (badge) {
      case 'Legendary':
        return 'from-yellow-400 to-orange-500'
      case 'Epic':
        return 'from-purple-400 to-pink-500'
      case 'Master':
        return 'from-blue-400 to-indigo-500'
      case 'Expert':
        return 'from-green-400 to-teal-500'
      case 'Pro':
        return 'from-red-400 to-pink-500'
      default:
        return 'from-gray-400 to-gray-500'
    }
  }

  return (
    <div className="min-h-screen py-8 px-4">
      <div className="max-w-6xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-12"
        >
          <h1 className="text-4xl md:text-5xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-400 bg-clip-text text-transparent">
            Leaderboard
          </h1>
          <p className="text-xl text-gray-300 max-w-2xl mx-auto">
            Celebrating the most creative minds and viral content in the MemeMint ecosystem.
          </p>
        </motion.div>

        {/* Tabs */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="flex flex-wrap justify-center gap-3 mb-8"
        >
          {tabs.map((tab) => {
            const Icon = tab.icon
            return (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-xl transition-all duration-300 ${
                  activeTab === tab.id
                    ? 'bg-gradient-to-r from-primary-500 to-accent-500 text-white shadow-lg'
                    : 'bg-white/10 text-gray-300 hover:bg-white/20'
                }`}
              >
                <Icon className="w-5 h-5" />
                <span>{tab.label}</span>
              </button>
            )
          })}
        </motion.div>

        {/* Top 3 Podium */}
        {activeTab === 'creators' && (
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="mb-12"
          >
            <div className="flex justify-center items-end space-x-4 mb-8">
              {/* 2nd Place */}
              <div className="text-center">
                <motion.div
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.6, delay: 0.1 }}
                  className="card bg-gradient-to-br from-gray-400/20 to-gray-600/20 border-gray-400/30 p-6 mb-4"
                >
                  <div className="text-4xl mb-2">{topCreators[1].avatar}</div>
                  <h3 className="font-bold text-white">{topCreators[1].name}</h3>
                  <p className="text-sm text-gray-300">{topCreators[1].earnings}</p>
                </motion.div>
                <div className="bg-gray-400 h-20 w-24 rounded-t-lg flex items-center justify-center">
                  <Medal className="w-8 h-8 text-white" />
                </div>
              </div>

              {/* 1st Place */}
              <div className="text-center">
                <motion.div
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.6 }}
                  className="card bg-gradient-to-br from-yellow-400/20 to-orange-500/20 border-yellow-400/30 p-6 mb-4 glow-animation"
                >
                  <div className="text-5xl mb-2">{topCreators[0].avatar}</div>
                  <h3 className="font-bold text-white text-lg">{topCreators[0].name}</h3>
                  <p className="text-accent-400 font-bold">{topCreators[0].earnings}</p>
                </motion.div>
                <div className="bg-gradient-to-r from-yellow-400 to-orange-500 h-32 w-24 rounded-t-lg flex items-center justify-center">
                  <Crown className="w-10 h-10 text-white" />
                </div>
              </div>

              {/* 3rd Place */}
              <div className="text-center">
                <motion.div
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.6, delay: 0.2 }}
                  className="card bg-gradient-to-br from-amber-600/20 to-yellow-700/20 border-amber-600/30 p-6 mb-4"
                >
                  <div className="text-4xl mb-2">{topCreators[2].avatar}</div>
                  <h3 className="font-bold text-white">{topCreators[2].name}</h3>
                  <p className="text-sm text-gray-300">{topCreators[2].earnings}</p>
                </motion.div>
                <div className="bg-amber-600 h-16 w-24 rounded-t-lg flex items-center justify-center">
                  <Medal className="w-8 h-8 text-white" />
                </div>
              </div>
            </div>
          </motion.div>
        )}

        {/* Leaderboard List */}
        <div className="space-y-4">
          {activeTab === 'creators' && topCreators.map((creator, index) => (
            <motion.div
              key={creator.name}
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              className={`card flex items-center justify-between p-6 ${
                index < 3 ? 'border-2 border-primary-500/30' : ''
              }`}
            >
              <div className="flex items-center space-x-4">
                <div className="flex items-center justify-center w-12 h-12">
                  {getRankIcon(creator.rank)}
                </div>
                <div className="text-4xl">{creator.avatar}</div>
                <div>
                  <div className="flex items-center space-x-3">
                    <h3 className="text-lg font-bold text-white">{creator.name}</h3>
                    <span className={`px-3 py-1 rounded-full text-xs font-bold bg-gradient-to-r ${getBadgeColor(creator.badge)} text-white`}>
                      {creator.badge}
                    </span>
                  </div>
                  <div className="flex items-center space-x-6 text-sm text-gray-400 mt-1">
                    <div className="flex items-center space-x-1">
                      <Zap className="w-4 h-4" />
                      <span>{creator.totalMemes} memes</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <Heart className="w-4 h-4" />
                      <span>{creator.totalLikes.toLocaleString()}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <GitBranch className="w-4 h-4" />
                      <span>{creator.totalRemixes}</span>
                    </div>
                  </div>
                </div>
              </div>
              <div className="text-right">
                <div className="text-2xl font-bold text-accent-400">{creator.earnings}</div>
                <div className="text-sm text-gray-400">Total Earned</div>
              </div>
            </motion.div>
          ))}

          {activeTab === 'memes' && viralMemes.map((meme, index) => (
            <motion.div
              key={meme.title}
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              className="card flex items-center justify-between p-6"
            >
              <div className="flex items-center space-x-4">
                <div className="flex items-center justify-center w-12 h-12">
                  {getRankIcon(meme.rank)}
                </div>
                <div className="text-4xl">{meme.image}</div>
                <div>
                  <h3 className="text-lg font-bold text-white">{meme.title}</h3>
                  <p className="text-sm text-gray-400">by {meme.creator}</p>
                  <div className="flex items-center space-x-6 text-sm text-gray-400 mt-1">
                    <div className="flex items-center space-x-1">
                      <Heart className="w-4 h-4" />
                      <span>{meme.likes.toLocaleString()}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <GitBranch className="w-4 h-4" />
                      <span>{meme.remixes}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <TrendingUp className="w-4 h-4" />
                      <span>{meme.views.toLocaleString()}</span>
                    </div>
                  </div>
                </div>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Achievement Badges */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.5 }}
          className="mt-16"
        >
          <h2 className="text-2xl font-bold text-white mb-6 text-center">Achievement Badges</h2>
          <div className="grid md:grid-cols-3 lg:grid-cols-5 gap-4">
            {[
              { name: 'First Meme', emoji: '🎯', description: 'Create your first meme' },
              { name: 'Viral Hit', emoji: '🔥', description: '1K+ likes on a meme' },
              { name: 'Remix Master', emoji: '🎭', description: '100+ remixes created' },
              { name: 'Trendsetter', emoji: '📈', description: 'Start a viral trend' },
              { name: 'Millionaire', emoji: '💰', description: 'Earn $1M in royalties' }
            ].map((badge, index) => (
              <motion.div
                key={badge.name}
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                className="card text-center p-4 hover:scale-105"
              >
                <div className="text-3xl mb-2">{badge.emoji}</div>
                <h3 className="font-bold text-white text-sm mb-1">{badge.name}</h3>
                <p className="text-xs text-gray-400">{badge.description}</p>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </div>
    </div>
  )
}

export default Leaderboard
